"""init

Revision ID: e7474056c8ba
Revises: 
Create Date: 2022-11-24 13:50:26.582905

"""
from alembic import op
import sqlalchemy as sa
from enums import CStatuses, CWorkes, URoles

# revision identifiers, used by Alembic.
revision = 'e7474056c8ba'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    c_statuses = op.create_table('client_statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    comment='Статус аккаунта'
    )
    c_workes = op.create_table('client_workes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    comment='Чем занят аккаунт'
    )

    u_roles = op.create_table('user_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    comment='Роль юзера'
    )
    
    op.bulk_insert(c_statuses, [{'id':status.value['id'],'name':status.value['name']} for status in CStatuses])
 
    op.bulk_insert(c_workes, [{'id':work.value['id'],'name':work.value['name']} for work in CWorkes])
    
    op.bulk_insert(u_roles, [{'id':role.value['id'],'name':role.value['name']} for role in URoles])


    op.create_table('members',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('invite_restricted', sa.Boolean(), nullable=True, comment='Заблокирован ли у юзера приём инвайтов (1 - да)'),
    sa.Column('chat_id', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    comment='Спарсенные участники групп'
    )

    op.create_table('client_accounts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('work_id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('api_id', sa.Integer(), nullable=False),
    sa.Column('api_hash', sa.String(length=50), nullable=False),
    sa.Column('phone', sa.String(length=16), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['status_id'], ['client_statuses.id'], ),
    sa.ForeignKeyConstraint(['work_id'], ['client_workes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Аккаунты парсеры'
    )
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['user_role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Юзеры'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('client_accounts')
    op.drop_table('user_role')
    op.drop_table('members')
    op.drop_table('client_workes')
    op.drop_table('client_statuses')
    # ### end Alembic commands ###
